{"name": "test_Login_Logout_002", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='Email']\"}\n  (Session info: chrome=123.0.6312.124); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7B7FD7032+63090]\n\t(No symbol) [0x00007FF7B7F42C82]\n\t(No symbol) [0x00007FF7B7DDEC65]\n\t(No symbol) [0x00007FF7B7E2499D]\n\t(No symbol) [0x00007FF7B7E24ADC]\n\t(No symbol) [0x00007FF7B7E65B37]\n\t(No symbol) [0x00007FF7B7E4701F]\n\t(No symbol) [0x00007FF7B7E63412]\n\t(No symbol) [0x00007FF7B7E46D83]\n\t(No symbol) [0x00007FF7B7E183A8]\n\t(No symbol) [0x00007FF7B7E19441]\n\tGetHandleVerifier [0x00007FF7B83D25AD+4238317]\n\tGetHandleVerifier [0x00007FF7B840F70D+4488525]\n\tGetHandleVerifier [0x00007FF7B84079EF+4456495]\n\tGetHandleVerifier [0x00007FF7B80B0576+953270]\n\t(No symbol) [0x00007FF7B7F4E54F]\n\t(No symbol) [0x00007FF7B7F49224]\n\t(No symbol) [0x00007FF7B7F4935B]\n\t(No symbol) [0x00007FF7B7F39B94]\n\tBaseThreadInitThunk [0x00007FFB59697344+20]\n\tRtlUserThreadStart [0x00007FFB5B6A26B1+33]", "trace": "self = <Testcases.test_UserLogin.Test_UserLogin object at 0x000001EFBC815040>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"121df48c2775b6e75fc3eaa43625f115\")>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_Login_Logout_002(self, setup):\n    \n        self.log.info(\"Testcase test_Verify_Url_001 is Started\")\n        self.log.info(\"Opening Browser\")\n        self.driver = setup\n        self.lp = LoginClass(self.driver)\n    \n        self.log.info(\"Enter Email:\" + self.Email)\n>       self.lp.Enter_Email(self.Email)\n\nTestcases\\test_UserLogin.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\LoginPage.py:20: in Enter_Email\n    self.driver.find_element(By.XPATH, self.Enter_Email_Xpath).clear()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EFBCA6BD40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7B7F39B94]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB59697344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB5B6A26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='Email']\"}\nE         (Session info: chrome=123.0.6312.124); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7B7FD7032+63090]\nE       \t(No symbol) [0x00007FF7B7F42C82]\nE       \t(No symbol) [0x00007FF7B7DDEC65]\nE       \t(No symbol) [0x00007FF7B7E2499D]\nE       \t(No symbol) [0x00007FF7B7E24ADC]\nE       \t(No symbol) [0x00007FF7B7E65B37]\nE       \t(No symbol) [0x00007FF7B7E4701F]\nE       \t(No symbol) [0x00007FF7B7E63412]\nE       \t(No symbol) [0x00007FF7B7E46D83]\nE       \t(No symbol) [0x00007FF7B7E183A8]\nE       \t(No symbol) [0x00007FF7B7E19441]\nE       \tGetHandleVerifier [0x00007FF7B83D25AD+4238317]\nE       \tGetHandleVerifier [0x00007FF7B840F70D+4488525]\nE       \tGetHandleVerifier [0x00007FF7B84079EF+4456495]\nE       \tGetHandleVerifier [0x00007FF7B80B0576+953270]\nE       \t(No symbol) [0x00007FF7B7F4E54F]\nE       \t(No symbol) [0x00007FF7B7F49224]\nE       \t(No symbol) [0x00007FF7B7F4935B]\nE       \t(No symbol) [0x00007FF7B7F39B94]\nE       \tBaseThreadInitThunk [0x00007FFB59697344+20]\nE       \tRtlUserThreadStart [0x00007FFB5B6A26B1+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "812dfc6f-76c2-4120-8575-c06676ddcc3b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "90d32350-0cb6-4f5c-8f7a-b2407e2ae9d1-attachment.txt", "type": "text/plain"}], "start": 1714289679617, "stop": 1714289680581, "uuid": "d43872f8-5906-48f3-9fa4-d1ffc0602af8", "historyId": "4b06733263123f16dd7b932a5d950022", "testCaseId": "4b06733263123f16dd7b932a5d950022", "fullName": "Testcases.test_UserLogin.Test_UserLogin#test_Login_Logout_002", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "Testcases"}, {"name": "suite", "value": "test_UserLogin"}, {"name": "subSuite", "value": "Test_UserLogin"}, {"name": "host", "value": "DESKTOP-CI9QNDC"}, {"name": "thread", "value": "15672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcases.test_UserLogin"}]}