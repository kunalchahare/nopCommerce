{"name": "test_user_login_DDT_005", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"nav-link\" href=\"/logout\"> is not clickable at point (1416,28) because another element <div id=\"ajaxBusy\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:335:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\nsend@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:82714\najax@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:78291\n@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:58:16352\nk/t[r]@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:58:12396\nt@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:62:46564\ninitOnce@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:62:46966\ninit@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:62:47618\n@https://admin-demo.nopcommerce.com/admin/ line 1 > injectedScript:3:46\ne@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:30038\nl/</t<@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:30340", "trace": "self = <Testcases.test_UserLogin_DDT.Test_Login_DDT object at 0x000001ECE1AD54F0>\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"e3da8eb1-3a72-47fa-af47-f03b4afd4dc9\")>\n\n    def test_user_login_DDT_005(self, setup):\n        self.log.info(\"Testcase test_user_login_DDT_005 is Started\")\n        self.driver = setup\n        self.log.info(\"Opening Browser\")\n        self.lp = LoginClass(self.driver)\n        self.rows = ExcelMethods.numRows(self.Excel_File_Path, 'LoginData')\n    \n        Status_List = []\n        for r in range(2, self.rows + 1):  # iteration r=2\n            self.username = ExcelMethods.readData(self.Excel_File_Path, 'LoginData', r, 2)\n            self.password = ExcelMethods.readData(self.Excel_File_Path, 'LoginData', r, 3)\n            self.Expected_Result = ExcelMethods.readData(self.Excel_File_Path, 'LoginData', r, 4)\n    \n            self.log.info(\"Enter Email:\" + self.username)\n            self.lp.Enter_Email(self.username)\n    \n            self.log.info(\"Enter Password:\" + self.password)\n            self.lp.Enter_Password(self.password)\n    \n            self.lp.Click_LoginButton()\n            self.log.info(\"Click on Login Button\")\n    \n            if self.lp.Verify_Login() == \"Login Pass\":  # actual result # Login pass\n                self.log.info(\"Login Pass\")\n                ExcelMethods.writenData(self.Excel_File_Path, 'LoginData', r, 5, \"Pass\")\n                if self.Expected_Result == \"Pass\":  # expected result\n                    Status_List.append(\"Pass\")  # updating the Status List\n                    self.log.info(\"Testcase test_user_login_004 is Passed\")\n                    self.log.info(\"Taking screenshot\")\n                    allure.attach(self.driver.get_screenshot_as_png(), name=\"test_user_login_parameters_004-Pass\",\n                                  attachment_type=AttachmentType.PNG)\n                    self.driver.save_screenshot(\"..\\\\Screenshots\\\\test_user_login_parameters_004.png\")\n                    self.log.info(\"Click on Logout Button\")\n>                   self.lp.Click_LogoutButton()\n\nTestcases\\test_UserLogin_DDT.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\LoginPage.py:39: in Click_LogoutButton\n    self.driver.find_element(By.XPATH, self.Click_LogoutButton_Xpath).click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001ECE1EC32C0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <a class=\\\\\"nav-link\\\\\" hre...\\\\nl/</t<@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:30340\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"nav-link\" href=\"/logout\"> is not clickable at point (1416,28) because another element <div id=\"ajaxBusy\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:335:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\nE       send@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:82714\nE       ajax@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:78291\nE       @https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:58:16352\nE       k/t[r]@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:58:12396\nE       t@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:62:46564\nE       initOnce@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:62:46966\nE       init@https://admin-demo.nopcommerce.com/js/qlvfucyxvmxlswx0bx1vxg.scripts.js?v=Br6UWCrqZUB74-7MhdGWjKlzW5w:62:47618\nE       @https://admin-demo.nopcommerce.com/admin/ line 1 > injectedScript:3:46\nE       e@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:30038\nE       l/</t<@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=MYt6ZTcxPTSOwyUF4RreR4ad2_g:2:30340\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "test_user_login_parameters_004-Pass", "source": "1a3e208c-c9ee-42b6-a7d5-1973c9259374-attachment.png", "type": "image/png"}, {"name": "log", "source": "3e321f1e-639f-4579-9da4-a43f67ba9c55-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "cd7b0b3e-46f3-4c44-bfd8-74335c3a2205-attachment.txt", "type": "text/plain"}], "start": 1714289958026, "stop": 1714289967949, "uuid": "67c899b5-3f3d-455c-866c-844ecdee7cfd", "historyId": "bbd10817e28ce264cef70ae9737bb2c2", "testCaseId": "bbd10817e28ce264cef70ae9737bb2c2", "fullName": "Testcases.test_UserLogin_DDT.Test_Login_DDT#test_user_login_DDT_005", "labels": [{"name": "parentSuite", "value": "Testcases"}, {"name": "suite", "value": "test_UserLogin_DDT"}, {"name": "subSuite", "value": "Test_Login_DDT"}, {"name": "host", "value": "DESKTOP-CI9QNDC"}, {"name": "thread", "value": "17536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcases.test_UserLogin_DDT"}]}